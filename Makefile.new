SHELL := /usr/bin/env bash

# Only include properly dated posts (ignore template.tex)
POSTS := $(shell find posts -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]-*.tex' | sort)

BUILD_DIR  := build
POSTS_DIR  := $(BUILD_DIR)/posts
PDF_DIR    := $(BUILD_DIR)/pdf

.PHONY: all html pdf assets index clean serve new doctor

all: html pdf assets index

html:
	@echo "==> Building HTML from LaTeX with Pandoc + KaTeX"
	@mkdir -p "$(POSTS_DIR)"
	@/usr/bin/env bash <<'BASH'
	set -euo pipefail
	for f in $(POSTS); do
		echo $(f)
# 		name=$$(basename "$$f"); base=$${name%.tex}
# 		date=$$(echo $$base | cut -d- -f1-3)
# 		slug=$$(echo $$base | cut -d- -f4-)
# 		[[ -z "$$slug" ]] && { echo "Skip $$f (bad name)"; continue; }
# 		outdir="$(POSTS_DIR)/$$slug"; mkdir -p "$$outdir"
# 		meta_json="posts/$${slug}.meta.json"
# 		TAGS='[]'
# 		if [[ -f "$$meta_json" ]] && command -v jq >/dev/null 2>&1; then
# 			TAGS=$$(jq -c '.tags // []' "$$meta_json" || echo '[]')
# 		fi
# 		pandoc "posts/$$base.tex" -s -t html5 --katex 
# 			--template=templates/post.html 
# 			--metadata=pdf_url:"pdf/$$slug.pdf" 
# 			--metadata=tags:"$$TAGS" 
# 			--resource-path=.:posts 
# 			-o "$$outdir/index.html"
	done
BASH

pdf:
	@echo "==> Building PDFs with Tectonic"
	@mkdir -p "$(PDF_DIR)"
	@/usr/bin/env bash <<'BASH'
	set -euo pipefail
	for f in $(POSTS); do
	  name=$$(basename "$$f"); base=$${name%.tex}
	  slug=$$(echo $$base | cut -d- -f4-)
	  tectonic "posts/$$base.tex" --outdir "$(PDF_DIR)"
	  if [[ -f "$(PDF_DIR)/$$base.pdf" ]]; then
	    mv "$(PDF_DIR)/$$base.pdf" "$(PDF_DIR)/$$slug.pdf"
	  fi
	done
BASH

assets:
	@echo "==> Copying assets"
	@if [[ -d assets ]]; then rsync -a assets/ $(BUILD_DIR)/assets/; else echo "(no assets/ dir)"; fi

index:
	@echo "==> Generating index.html"
	@python3 scripts/generate_index.py

serve:
	@echo "==> Serving build/ at http://localhost:8080"
	@python3 -m http.server 8080 --directory $(BUILD_DIR)

clean:
	rm -rf $(BUILD_DIR)

# Create a new post from the LaTeX template.
# Usage: make new SLUG=my-new-post DATE=2025-09-06
DATE ?= $(shell date +%Y-%m-%d)
new:
	@if [[ -z "$(SLUG)" ]]; then echo "Usage: make new SLUG=my-post [DATE=YYYY-MM-DD]"; exit 1; fi
	cp posts/template.tex posts/$(DATE)-$(SLUG).tex
	@echo '{ "title": "'$(shell echo $(SLUG) | sed -E 's/-/ /g;s/\b(.)/\U\1/g')'", "tags": [] }' > posts/$(SLUG).meta.json

doctor:
	@echo "==> Environment check"
	@command -v pandoc   >/dev/null || echo "Missing: pandoc"
	@command -v tectonic >/dev/null || echo "Missing: tectonic"
	@command -v jq       >/dev/null || echo "Missing: jq (optional)"
	@printf 'Makefile line endings: '; (file Makefile | grep -q CRLF && echo CRLF || echo LF)

